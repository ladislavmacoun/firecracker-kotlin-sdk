name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: read
  checks: write
  pull-requests: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Format code (normalize line endings and fix style)
        run: ./gradlew ktlintFormat

      - name: Run ktlint check
        run: ./gradlew ktlintCheck

      - name: Show ktlint violations (if any)
        if: failure()
        run: |
          echo "Ktlint found formatting violations:"
          find . -name "ktlint*.txt" -exec cat {} \; || true

      - name: Run detekt
        run: ./gradlew detekt

      - name: Run tests
        run: ./gradlew test

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: "**/build/test-results/test/TEST-*.xml"
          fail_on_failure: true
          require_tests: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            **/build/reports/tests/
            **/build/test-results/
          retention-days: 30

      - name: Upload detekt results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: detekt-results
          path: "**/build/reports/detekt/"
          retention-days: 30

  integration-test-hypervisor:
    name: Integration Tests (Hypervisor)
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Install Firecracker
        run: |
          echo "Installing Firecracker..."
          wget -q https://github.com/firecracker-microvm/firecracker/releases/download/v1.13.1/firecracker-v1.13.1-x86_64.tgz
          tar -xzf firecracker-v1.13.1-x86_64.tgz
          sudo cp release-v1.13.1-x86_64/firecracker-v1.13.1-x86_64 /usr/local/bin/firecracker
          sudo chmod +x /usr/local/bin/firecracker

      - name: Verify KVM and Firecracker
        run: |
          echo "Checking KVM support..."
          ls -la /dev/kvm
          lscpu | grep Virtualization || echo "No virtualization info"

          echo "Checking Firecracker..."
          firecracker --version

          echo "User and groups:"
          id
          groups

      - name: Run integration tests with hypervisor
        run: |
          export HYPERVISOR_SUPPORT_ENABLED=true
          ./gradlew integrationTest

      - name: Upload hypervisor test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-hypervisor-results
          path: |
            **/build/reports/tests/integrationTest/
            **/build/test-results/integrationTest/
          retention-days: 30

  build:
    runs-on: ubuntu-latest
    needs: [test, integration-test-hypervisor]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build project
        run: ./gradlew build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: "**/build/libs/"
          retention-days: 30
